// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0--rc1
// source: orchestrator.proto

package orchestrator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	To             string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Data           []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Value          string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	PreviewAddress string                 `protobuf:"bytes,4,opt,name=preview_address,json=previewAddress,proto3" json:"preview_address,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	mi := &file_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *TxRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TxRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TxRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TxRequest) GetPreviewAddress() string {
	if x != nil {
		return x.PreviewAddress
	}
	return ""
}

type PrepareCreateCollectionRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ChainId                string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Name                   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol                 string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Creator                string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	TokenUri               string                 `protobuf:"bytes,5,opt,name=token_uri,json=tokenUri,proto3" json:"token_uri,omitempty"` // replace logo_cid/banner_cid with token_uri
	Description            string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	MintPrice              uint64                 `protobuf:"varint,7,opt,name=mint_price,json=mintPrice,proto3" json:"mint_price,omitempty"`
	RoyaltyFee             uint64                 `protobuf:"varint,8,opt,name=royalty_fee,json=royaltyFee,proto3" json:"royalty_fee,omitempty"`
	MaxSupply              uint64                 `protobuf:"varint,9,opt,name=max_supply,json=maxSupply,proto3" json:"max_supply,omitempty"`
	MintLimitPerWallet     uint64                 `protobuf:"varint,10,opt,name=mint_limit_per_wallet,json=mintLimitPerWallet,proto3" json:"mint_limit_per_wallet,omitempty"`
	MintStartTime          uint64                 `protobuf:"varint,11,opt,name=mint_start_time,json=mintStartTime,proto3" json:"mint_start_time,omitempty"`
	AllowlistMintPrice     uint64                 `protobuf:"varint,12,opt,name=allowlist_mint_price,json=allowlistMintPrice,proto3" json:"allowlist_mint_price,omitempty"`
	PublicMintPrice        uint64                 `protobuf:"varint,13,opt,name=public_mint_price,json=publicMintPrice,proto3" json:"public_mint_price,omitempty"`
	AllowlistStageDuration uint64                 `protobuf:"varint,14,opt,name=allowlist_stage_duration,json=allowlistStageDuration,proto3" json:"allowlist_stage_duration,omitempty"`
	Type                   string                 `protobuf:"bytes,15,opt,name=type,proto3" json:"type,omitempty"` // ERC721 or ERC1155 - specifies the collection type
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PrepareCreateCollectionRequest) Reset() {
	*x = PrepareCreateCollectionRequest{}
	mi := &file_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareCreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareCreateCollectionRequest) ProtoMessage() {}

func (x *PrepareCreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareCreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*PrepareCreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{1}
}

func (x *PrepareCreateCollectionRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetTokenUri() string {
	if x != nil {
		return x.TokenUri
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PrepareCreateCollectionRequest) GetMintPrice() uint64 {
	if x != nil {
		return x.MintPrice
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetRoyaltyFee() uint64 {
	if x != nil {
		return x.RoyaltyFee
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetMaxSupply() uint64 {
	if x != nil {
		return x.MaxSupply
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetMintLimitPerWallet() uint64 {
	if x != nil {
		return x.MintLimitPerWallet
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetMintStartTime() uint64 {
	if x != nil {
		return x.MintStartTime
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetAllowlistMintPrice() uint64 {
	if x != nil {
		return x.AllowlistMintPrice
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetPublicMintPrice() uint64 {
	if x != nil {
		return x.PublicMintPrice
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetAllowlistStageDuration() uint64 {
	if x != nil {
		return x.AllowlistStageDuration
	}
	return 0
}

func (x *PrepareCreateCollectionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PrepareCreateCollectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	Tx            *TxRequest             `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareCreateCollectionResponse) Reset() {
	*x = PrepareCreateCollectionResponse{}
	mi := &file_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareCreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareCreateCollectionResponse) ProtoMessage() {}

func (x *PrepareCreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareCreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*PrepareCreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *PrepareCreateCollectionResponse) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *PrepareCreateCollectionResponse) GetTx() *TxRequest {
	if x != nil {
		return x.Tx
	}
	return nil
}

type PrepareMintRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainId       string                 `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Contract      string                 `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	Minter        string                 `protobuf:"bytes,3,opt,name=minter,proto3" json:"minter,omitempty"`
	Standard      string                 `protobuf:"bytes,4,opt,name=standard,proto3" json:"standard,omitempty"`
	Quantity      uint64                 `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"` // ERC721: 1
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareMintRequest) Reset() {
	*x = PrepareMintRequest{}
	mi := &file_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareMintRequest) ProtoMessage() {}

func (x *PrepareMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareMintRequest.ProtoReflect.Descriptor instead.
func (*PrepareMintRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *PrepareMintRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *PrepareMintRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *PrepareMintRequest) GetMinter() string {
	if x != nil {
		return x.Minter
	}
	return ""
}

func (x *PrepareMintRequest) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

func (x *PrepareMintRequest) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type PrepareMintResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	Tx            *TxRequest             `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareMintResponse) Reset() {
	*x = PrepareMintResponse{}
	mi := &file_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareMintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareMintResponse) ProtoMessage() {}

func (x *PrepareMintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareMintResponse.ProtoReflect.Descriptor instead.
func (*PrepareMintResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *PrepareMintResponse) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *PrepareMintResponse) GetTx() *TxRequest {
	if x != nil {
		return x.Tx
	}
	return nil
}

type TrackTxRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	ChainId       string                 `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TxHash        string                 `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Contract      string                 `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackTxRequest) Reset() {
	*x = TrackTxRequest{}
	mi := &file_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTxRequest) ProtoMessage() {}

func (x *TrackTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTxRequest.ProtoReflect.Descriptor instead.
func (*TrackTxRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *TrackTxRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *TrackTxRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *TrackTxRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TrackTxRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

type TrackTxResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackTxResponse) Reset() {
	*x = TrackTxResponse{}
	mi := &file_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackTxResponse) ProtoMessage() {}

func (x *TrackTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackTxResponse.ProtoReflect.Descriptor instead.
func (*TrackTxResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *TrackTxResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type GetIntentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentId      string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIntentStatusRequest) Reset() {
	*x = GetIntentStatusRequest{}
	mi := &file_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIntentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntentStatusRequest) ProtoMessage() {}

func (x *GetIntentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntentStatusRequest.ProtoReflect.Descriptor instead.
func (*GetIntentStatusRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{7}
}

func (x *GetIntentStatusRequest) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

type GetIntentStatusResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IntentId        string                 `protobuf:"bytes,1,opt,name=intent_id,json=intentId,proto3" json:"intent_id,omitempty"`
	Kind            string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	Status          string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // pending|ready|failed|expired
	ChainId         string                 `protobuf:"bytes,4,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TxHash          string                 `protobuf:"bytes,5,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	ContractAddress string                 `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetIntentStatusResponse) Reset() {
	*x = GetIntentStatusResponse{}
	mi := &file_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIntentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntentStatusResponse) ProtoMessage() {}

func (x *GetIntentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntentStatusResponse.ProtoReflect.Descriptor instead.
func (*GetIntentStatusResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *GetIntentStatusResponse) GetIntentId() string {
	if x != nil {
		return x.IntentId
	}
	return ""
}

func (x *GetIntentStatusResponse) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *GetIntentStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetIntentStatusResponse) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *GetIntentStatusResponse) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *GetIntentStatusResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

var File_orchestrator_proto protoreflect.FileDescriptor

const file_orchestrator_proto_rawDesc = "" +
	"\n" +
	"\x12orchestrator.proto\x12\forchestrator\"n\n" +
	"\tTxRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12'\n" +
	"\x0fpreview_address\x18\x04 \x01(\tR\x0epreviewAddress\"\xa6\x04\n" +
	"\x1ePrepareCreateCollectionRequest\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\x12\x18\n" +
	"\acreator\x18\x04 \x01(\tR\acreator\x12\x1b\n" +
	"\ttoken_uri\x18\x05 \x01(\tR\btokenUri\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"mint_price\x18\a \x01(\x04R\tmintPrice\x12\x1f\n" +
	"\vroyalty_fee\x18\b \x01(\x04R\n" +
	"royaltyFee\x12\x1d\n" +
	"\n" +
	"max_supply\x18\t \x01(\x04R\tmaxSupply\x121\n" +
	"\x15mint_limit_per_wallet\x18\n" +
	" \x01(\x04R\x12mintLimitPerWallet\x12&\n" +
	"\x0fmint_start_time\x18\v \x01(\x04R\rmintStartTime\x120\n" +
	"\x14allowlist_mint_price\x18\f \x01(\x04R\x12allowlistMintPrice\x12*\n" +
	"\x11public_mint_price\x18\r \x01(\x04R\x0fpublicMintPrice\x128\n" +
	"\x18allowlist_stage_duration\x18\x0e \x01(\x04R\x16allowlistStageDuration\x12\x12\n" +
	"\x04type\x18\x0f \x01(\tR\x04type\"g\n" +
	"\x1fPrepareCreateCollectionResponse\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12'\n" +
	"\x02tx\x18\x02 \x01(\v2\x17.orchestrator.TxRequestR\x02tx\"\x9b\x01\n" +
	"\x12PrepareMintRequest\x12\x19\n" +
	"\bchain_id\x18\x01 \x01(\tR\achainId\x12\x1a\n" +
	"\bcontract\x18\x02 \x01(\tR\bcontract\x12\x16\n" +
	"\x06minter\x18\x03 \x01(\tR\x06minter\x12\x1a\n" +
	"\bstandard\x18\x04 \x01(\tR\bstandard\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x04R\bquantity\"[\n" +
	"\x13PrepareMintResponse\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12'\n" +
	"\x02tx\x18\x02 \x01(\v2\x17.orchestrator.TxRequestR\x02tx\"}\n" +
	"\x0eTrackTxRequest\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\tR\achainId\x12\x17\n" +
	"\atx_hash\x18\x03 \x01(\tR\x06txHash\x12\x1a\n" +
	"\bcontract\x18\x04 \x01(\tR\bcontract\"!\n" +
	"\x0fTrackTxResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"5\n" +
	"\x16GetIntentStatusRequest\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\"\xc1\x01\n" +
	"\x17GetIntentStatusResponse\x12\x1b\n" +
	"\tintent_id\x18\x01 \x01(\tR\bintentId\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x19\n" +
	"\bchain_id\x18\x04 \x01(\tR\achainId\x12\x17\n" +
	"\atx_hash\x18\x05 \x01(\tR\x06txHash\x12)\n" +
	"\x10contract_address\x18\x06 \x01(\tR\x0fcontractAddress2\x89\x03\n" +
	"\x13OrchestratorService\x12v\n" +
	"\x17PrepareCreateCollection\x12,.orchestrator.PrepareCreateCollectionRequest\x1a-.orchestrator.PrepareCreateCollectionResponse\x12R\n" +
	"\vPrepareMint\x12 .orchestrator.PrepareMintRequest\x1a!.orchestrator.PrepareMintResponse\x12F\n" +
	"\aTrackTx\x12\x1c.orchestrator.TrackTxRequest\x1a\x1d.orchestrator.TrackTxResponse\x12^\n" +
	"\x0fGetIntentStatus\x12$.orchestrator.GetIntentStatusRequest\x1a%.orchestrator.GetIntentStatusResponseB(Z&shared/proto/orchestrator;orchestratorb\x06proto3"

var (
	file_orchestrator_proto_rawDescOnce sync.Once
	file_orchestrator_proto_rawDescData []byte
)

func file_orchestrator_proto_rawDescGZIP() []byte {
	file_orchestrator_proto_rawDescOnce.Do(func() {
		file_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)))
	})
	return file_orchestrator_proto_rawDescData
}

var file_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_orchestrator_proto_goTypes = []any{
	(*TxRequest)(nil),                       // 0: orchestrator.TxRequest
	(*PrepareCreateCollectionRequest)(nil),  // 1: orchestrator.PrepareCreateCollectionRequest
	(*PrepareCreateCollectionResponse)(nil), // 2: orchestrator.PrepareCreateCollectionResponse
	(*PrepareMintRequest)(nil),              // 3: orchestrator.PrepareMintRequest
	(*PrepareMintResponse)(nil),             // 4: orchestrator.PrepareMintResponse
	(*TrackTxRequest)(nil),                  // 5: orchestrator.TrackTxRequest
	(*TrackTxResponse)(nil),                 // 6: orchestrator.TrackTxResponse
	(*GetIntentStatusRequest)(nil),          // 7: orchestrator.GetIntentStatusRequest
	(*GetIntentStatusResponse)(nil),         // 8: orchestrator.GetIntentStatusResponse
}
var file_orchestrator_proto_depIdxs = []int32{
	0, // 0: orchestrator.PrepareCreateCollectionResponse.tx:type_name -> orchestrator.TxRequest
	0, // 1: orchestrator.PrepareMintResponse.tx:type_name -> orchestrator.TxRequest
	1, // 2: orchestrator.OrchestratorService.PrepareCreateCollection:input_type -> orchestrator.PrepareCreateCollectionRequest
	3, // 3: orchestrator.OrchestratorService.PrepareMint:input_type -> orchestrator.PrepareMintRequest
	5, // 4: orchestrator.OrchestratorService.TrackTx:input_type -> orchestrator.TrackTxRequest
	7, // 5: orchestrator.OrchestratorService.GetIntentStatus:input_type -> orchestrator.GetIntentStatusRequest
	2, // 6: orchestrator.OrchestratorService.PrepareCreateCollection:output_type -> orchestrator.PrepareCreateCollectionResponse
	4, // 7: orchestrator.OrchestratorService.PrepareMint:output_type -> orchestrator.PrepareMintResponse
	6, // 8: orchestrator.OrchestratorService.TrackTx:output_type -> orchestrator.TrackTxResponse
	8, // 9: orchestrator.OrchestratorService.GetIntentStatus:output_type -> orchestrator.GetIntentStatusResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_orchestrator_proto_init() }
func file_orchestrator_proto_init() {
	if File_orchestrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_proto_rawDesc), len(file_orchestrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orchestrator_proto_goTypes,
		DependencyIndexes: file_orchestrator_proto_depIdxs,
		MessageInfos:      file_orchestrator_proto_msgTypes,
	}.Build()
	File_orchestrator_proto = out.File
	file_orchestrator_proto_goTypes = nil
	file_orchestrator_proto_depIdxs = nil
}
