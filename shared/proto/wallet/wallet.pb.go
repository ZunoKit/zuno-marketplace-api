// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: wallet.proto

package wallet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WalletLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId     string                 `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Address       string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`                // lowercase 0x…
	ChainId       string                 `protobuf:"bytes,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // CAIP-2
	IsPrimary     bool                   `protobuf:"varint,6,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	VerifiedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=verified_at,json=verifiedAt,proto3" json:"verified_at,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletLink) Reset() {
	*x = WalletLink{}
	mi := &file_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLink) ProtoMessage() {}

func (x *WalletLink) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLink.ProtoReflect.Descriptor instead.
func (*WalletLink) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *WalletLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WalletLink) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WalletLink) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *WalletLink) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WalletLink) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *WalletLink) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *WalletLink) GetVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.VerifiedAt
	}
	return nil
}

func (x *WalletLink) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *WalletLink) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpsertLinkRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	UserId    string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId string                 `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Address   string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`                // lowercase 0x…
	ChainId   string                 `protobuf:"bytes,4,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // CAIP-2
	IsPrimary bool                   `protobuf:"varint,5,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	// optional meta (nice-to-have)
	Type          string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`           // "eoa" | "contract"
	Connector     string `protobuf:"bytes,7,opt,name=connector,proto3" json:"connector,omitempty"` // "metamask", "walletconnect", ...
	Label         string `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertLinkRequest) Reset() {
	*x = UpsertLinkRequest{}
	mi := &file_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertLinkRequest) ProtoMessage() {}

func (x *UpsertLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertLinkRequest.ProtoReflect.Descriptor instead.
func (*UpsertLinkRequest) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertLinkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpsertLinkRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *UpsertLinkRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpsertLinkRequest) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *UpsertLinkRequest) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *UpsertLinkRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpsertLinkRequest) GetConnector() string {
	if x != nil {
		return x.Connector
	}
	return ""
}

func (x *UpsertLinkRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type UpsertLinkResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Link           *WalletLink            `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`
	Created        bool                   `protobuf:"varint,2,opt,name=created,proto3" json:"created,omitempty"`
	PrimaryChanged bool                   `protobuf:"varint,3,opt,name=primary_changed,json=primaryChanged,proto3" json:"primary_changed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpsertLinkResponse) Reset() {
	*x = UpsertLinkResponse{}
	mi := &file_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertLinkResponse) ProtoMessage() {}

func (x *UpsertLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertLinkResponse.ProtoReflect.Descriptor instead.
func (*UpsertLinkResponse) Descriptor() ([]byte, []int) {
	return file_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertLinkResponse) GetLink() *WalletLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *UpsertLinkResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

func (x *UpsertLinkResponse) GetPrimaryChanged() bool {
	if x != nil {
		return x.PrimaryChanged
	}
	return false
}

var File_wallet_proto protoreflect.FileDescriptor

const file_wallet_proto_rawDesc = "" +
	"\n" +
	"\fwallet.proto\x12\x06wallet\x1a\x1fgoogle/protobuf/timestamp.proto\"\xdb\x02\n" +
	"\n" +
	"WalletLink\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x03 \x01(\tR\taccountId\x12\x18\n" +
	"\aaddress\x18\x04 \x01(\tR\aaddress\x12\x19\n" +
	"\bchain_id\x18\x05 \x01(\tR\achainId\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x06 \x01(\bR\tisPrimary\x12;\n" +
	"\vverified_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"verifiedAt\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe7\x01\n" +
	"\x11UpsertLinkRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x19\n" +
	"\bchain_id\x18\x04 \x01(\tR\achainId\x12\x1d\n" +
	"\n" +
	"is_primary\x18\x05 \x01(\bR\tisPrimary\x12\x12\n" +
	"\x04type\x18\x06 \x01(\tR\x04type\x12\x1c\n" +
	"\tconnector\x18\a \x01(\tR\tconnector\x12\x14\n" +
	"\x05label\x18\b \x01(\tR\x05label\"\x7f\n" +
	"\x12UpsertLinkResponse\x12&\n" +
	"\x04link\x18\x01 \x01(\v2\x12.wallet.WalletLinkR\x04link\x12\x18\n" +
	"\acreated\x18\x02 \x01(\bR\acreated\x12'\n" +
	"\x0fprimary_changed\x18\x03 \x01(\bR\x0eprimaryChanged2T\n" +
	"\rWalletService\x12C\n" +
	"\n" +
	"UpsertLink\x12\x19.wallet.UpsertLinkRequest\x1a\x1a.wallet.UpsertLinkResponseB\x1cZ\x1ashared/proto/wallet;walletb\x06proto3"

var (
	file_wallet_proto_rawDescOnce sync.Once
	file_wallet_proto_rawDescData []byte
)

func file_wallet_proto_rawDescGZIP() []byte {
	file_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)))
	})
	return file_wallet_proto_rawDescData
}

var file_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wallet_proto_goTypes = []any{
	(*WalletLink)(nil),            // 0: wallet.WalletLink
	(*UpsertLinkRequest)(nil),     // 1: wallet.UpsertLinkRequest
	(*UpsertLinkResponse)(nil),    // 2: wallet.UpsertLinkResponse
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_wallet_proto_depIdxs = []int32{
	3, // 0: wallet.WalletLink.verified_at:type_name -> google.protobuf.Timestamp
	3, // 1: wallet.WalletLink.created_at:type_name -> google.protobuf.Timestamp
	3, // 2: wallet.WalletLink.updated_at:type_name -> google.protobuf.Timestamp
	0, // 3: wallet.UpsertLinkResponse.link:type_name -> wallet.WalletLink
	1, // 4: wallet.WalletService.UpsertLink:input_type -> wallet.UpsertLinkRequest
	2, // 5: wallet.WalletService.UpsertLink:output_type -> wallet.UpsertLinkResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wallet_proto_init() }
func file_wallet_proto_init() {
	if File_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_proto_rawDesc), len(file_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_proto_depIdxs,
		MessageInfos:      file_wallet_proto_msgTypes,
	}.Build()
	File_wallet_proto = out.File
	file_wallet_proto_goTypes = nil
	file_wallet_proto_depIdxs = nil
}
