services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: nft-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/auth-service/db/up.sql:/docker-entrypoint-initdb.d/01-auth-schema.sql
      - ./services/user-service/db/up.sql:/docker-entrypoint-initdb.d/02-user-schema.sql
      - ./services/wallet-service/db/up.sql:/docker-entrypoint-initdb.d/03-wallet-schema.sql
      - ./services/chain-registry-service/db/up.sql:/docker-entrypoint-initdb.d/04-chain-registry-schema.sql
      - ./services/orchestrator-service/db/up.sql:/docker-entrypoint-initdb.d/05-orchestrator-schema.sql
      - ./services/catalog-service/db/up.sql:/docker-entrypoint-initdb.d/06-catalog-schema.sql
      - ./services/indexer-service/db/up.sql:/docker-entrypoint-initdb.d/07-indexer-schema.sql
    networks:
      - nft-network

  redis:
    image: redis:7-alpine
    container_name: nft-redis
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - nft-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: nft-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "15672:15672"
    networks:
      - nft-network

  mongo:
    image: mongo:6
    container_name: nft-mongo
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - nft-network

  # Application Services
  auth-service:
    build:
      context: .
      dockerfile: infra/development/docker/auth-service.Dockerfile
      args:
        - CGO_ENABLED=0
        - GOOS=linux
        - GOARCH=amd64
    container_name: nft-auth-service
    env_file:
      - .env
    environment:
      - AUTH_GRPC_PORT=:${AUTH_GRPC_PORT}
      - USER_SERVICE_URL=user-service:${USER_GRPC_PORT}
      - WALLET_SERVICE_URL=wallet-service:${WALLET_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_SECRET=${REFRESH_SECRET}
    ports:
      - "${AUTH_GRPC_PORT}:${AUTH_GRPC_PORT}"

    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/auth-service
          target: /app/services/auth-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  user-service:
    build:
      context: .
      dockerfile: infra/development/docker/user-service.Dockerfile
    container_name: nft-user-service
    environment:
      - USER_GRPC_PORT=:${USER_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${USER_GRPC_PORT}:${USER_GRPC_PORT}"
    # volumes removed; using compose watch instead
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/user-service
          target: /app/services/user-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  wallet-service:
    build:
      context: .
      dockerfile: infra/development/docker/wallet-service.Dockerfile
    container_name: nft-wallet-service
    environment:
      - WALLET_GRPC_PORT=:${WALLET_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${WALLET_GRPC_PORT}:${WALLET_GRPC_PORT}"
    # volumes removed; using compose watch instead
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/wallet-service
          target: /app/services/wallet-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  orchestrator-service:
    build:
      context: .
      dockerfile: infra/development/docker/orchestrator-service.Dockerfile
    container_name: nft-orchestrator-service
    environment:
      - ORCHESTRATOR_GRPC_PORT=:${ORCHESTRATOR_GRPC_PORT}
      - CHAIN_REGISTRY_URL=chain-registry-service:${CHAIN_REGISTRY_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${ORCHESTRATOR_GRPC_PORT}:${ORCHESTRATOR_GRPC_PORT}"
    # volumes removed; using compose watch instead
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/orchestrator-service
          target: /app/services/orchestrator-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild



  media-service:
    build:
      context: .
      dockerfile: infra/development/docker/media-service.Dockerfile
    container_name: nft-media-service
    env_file:
      - .env
    environment:
      - MEDIA_GRPC_PORT=:${MEDIA_GRPC_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - PINATA_API_KEY=${PINATA_API_KEY}
      - PINATA_SECRET_KEY=${PINATA_SECRET_KEY}
      - PINATA_JWT_KEY=${PINATA_JWT_KEY}
    ports:
      - "${MEDIA_GRPC_PORT}:${MEDIA_GRPC_PORT}"

    depends_on:
      - mongo
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/media-service
          target: /app/services/media-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild


  chain-registry-service:
    build:
      context: .
      dockerfile: infra/development/docker/chain-registry-service.Dockerfile
    container_name: nft-chain-registry-service
    environment:
      - CHAIN_REGISTRY_GRPC_PORT=:${CHAIN_REGISTRY_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${CHAIN_REGISTRY_GRPC_PORT}:${CHAIN_REGISTRY_GRPC_PORT}"
    # volumes removed; using compose watch instead
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/chain-registry-service
          target: /app/services/chain-registry-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  catalog-service:
    build:
      context: .
      dockerfile: infra/development/docker/catalog-service.Dockerfile
    container_name: nft-catalog-service
    environment:
      - CATALOG_GRPC_PORT=:${CATALOG_GRPC_PORT}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${CATALOG_GRPC_PORT}:${CATALOG_GRPC_PORT}"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/catalog-service
          target: /app/services/catalog-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  indexer-service:
    build:
      context: .
      dockerfile: infra/development/docker/indexer-service.Dockerfile
    container_name: nft-indexer-service
    environment:
      - INDEXER_GRPC_PORT=:${INDEXER_GRPC_PORT}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - ETH_SEPOLIA_RPC=${ETH_SEPOLIA_RPC}
      - ANVIL_RPC=${ANVIL_RPC}
    depends_on:
      - postgres
      - mongo
      - rabbitmq
      - redis
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/indexer-service
          target: /app/services/indexer-service
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild




  graphql-gateway:
    build:
      context: .
      dockerfile: infra/development/docker/graph-gateway.Dockerfile
    container_name: nft-graphql-gateway
    environment:
      - GATEWAY_HTTP_ADDR=:${GATEWAY_HTTP_ADDR}
      - AUTH_SERVICE_URL=auth-service:${AUTH_GRPC_PORT}
      - USER_SERVICE_URL=user-service:${USER_GRPC_PORT}
      - WALLET_SERVICE_URL=wallet-service:${WALLET_GRPC_PORT}
      - MEDIA_SERVICE_URL=media-service:${MEDIA_GRPC_PORT}
      - CHAIN_REGISTRY_SERVICE_URL=chain-registry-service:${CHAIN_REGISTRY_GRPC_PORT}
      - ORCHESTRATOR_SERVICE_URL=orchestrator-service:${ORCHESTRATOR_GRPC_PORT}
      - CATALOG_SERVICE_URL=catalog-service:${CATALOG_GRPC_PORT}
      - INDEXER_SERVICE_URL=indexer-service:${INDEXER_GRPC_PORT}
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    ports:
      - "${GATEWAY_HTTP_ADDR}:${GATEWAY_HTTP_ADDR}"
    # volumes removed; using compose watch instead
    depends_on:
      - auth-service
      - user-service
      - wallet-service
      - media-service
      - chain-registry-service
      - orchestrator-service
      - catalog-service
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/graphql-gateway
          target: /app/services/graphql-gateway
          action: sync
        - path: ./go.mod
          target: /app/go.mod
          action: sync
        - path: ./go.sum
          target: /app/go.sum
          action: sync
        - path: .
          action: rebuild

  subscription-worker:
    build:
      context: .
      dockerfile: infra/development/docker/subscription-worker.Dockerfile
      args:
        - CGO_ENABLED=0
        - GOOS=linux
        - GOARCH=amd64
    container_name: nft-subscription-worker
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_EXCHANGE=${RABBITMQ_EXCHANGE}
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - graphql-gateway
    networks:
      - nft-network
    develop:
      watch:
        - path: ./shared
          target: /app/shared
          action: sync
        - path: ./services/subscription-worker
          target: /app/services/subscription-worker
          action: sync

volumes:
  postgres_data:
  mongo_data:

networks:
  nft-network:
    driver: bridge
